if not game:IsLoaded() then game["Loaded"]:Wait() end

-------------------------------------------------------------------------------------------------------------------------------

local players = game:GetService("Players")
local localplayer = players["LocalPlayer"]
local runservice = game:GetService("RunService")
local uis = game:GetService("UserInputService")
local tweenService = game:GetService("TweenService")

-------------------------------------------------------------------------------------------------------------------------------

-- Función para encontrar un lugar seguro para poner la GUI
local function findSafeParent()
    local safeParents = {
        function() return gethui and gethui() end,
        function() return game:GetService("CoreGui") end,
        function() return localplayer:FindFirstChild("PlayerGui") end,
        function() return game:FindFirstChild("Lighting") end,
        function() return workspace end
    }
    
    for _, parentFunc in ipairs(safeParents) do
        local success, parent = pcall(parentFunc)
        if success and parent then
            return parent
        end
    end
    return nil
end

-------------------------------------------------------------------------------------------------------------------------------

local function clik()
    local s = Instance.new("Sound") 
    s["SoundId"] = "rbxassetid://87152549167464"
    s["Parent"] = game["Workspace"]
    s["Volume"] = 1.2
    s["TimePosition"] = 0.1
    s:Play()
end

-------------------------------------------------------------------------------------------------------------------------------

-- Variables para los estados
local infiniteJumpEnabled = false
local noclipEnabled = false
local espEnabled = false
local espHighlights = {}

-- Función para Infinite Jump
local function toggleInfiniteJump()
    infiniteJumpEnabled = not infiniteJumpEnabled
    
    if infiniteJumpEnabled then
        local connection
        connection = uis.JumpRequest:Connect(function()
            if localplayer.Character and localplayer.Character:FindFirstChildOfClass("Humanoid") then
                localplayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping")
            end
        end)
        -- Guardar la conexión para poder desconectarla después
        getgenv().infiniteJumpConnection = connection
    else
        if getgenv().infiniteJumpConnection then
            getgenv().infiniteJumpConnection:Disconnect()
            getgenv().infiniteJumpConnection = nil
        end
    end
end

-- Función para Noclip
local function toggleNoclip()
    noclipEnabled = not noclipEnabled
    
    if noclipEnabled then
        local noclipConnection
        noclipConnection = runservice.Stepped:Connect(function()
            if localplayer.Character then
                for _, part in pairs(localplayer.Character:GetDescendants()) do
                    if part:IsA("BasePart") and part.CanCollide then
                        part.CanCollide = false
                    end
                end
            end
        end)
        getgenv().noclipConnection = noclipConnection
    else
        if getgenv().noclipConnection then
            getgenv().noclipConnection:Disconnect()
            getgenv().noclipConnection = nil
        end
        -- Restaurar collision
        if localplayer.Character then
            for _, part in pairs(localplayer.Character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = true
                end
            end
        end
    end
end

-- Función para ESP
local function toggleESP()
    espEnabled = not espEnabled
    
    if espEnabled then
        -- Crear ESP para todos los jugadores
        for _, player in pairs(players:GetPlayers()) do
            if player ~= localplayer and player.Character then
                coroutine.wrap(function()
                    wait(0.5) -- Pequeño delay
                    if player.Character and espEnabled then
                        local highlight = Instance.new("Highlight")
                        highlight.Name = "ESP_" .. player.Name
                        highlight.FillColor = Color3.fromRGB(255, 0, 0)
                        highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
                        highlight.FillTransparency = 0.7
                        highlight.OutlineTransparency = 0
                        highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                        highlight.Parent = player.Character
                        espHighlights[player] = highlight
                    end
                end)()
                
                -- Conectar para cuando el personaje cambie
                player.CharacterAdded:Connect(function(newChar)
                    wait(1)
                    if espEnabled and player ~= localplayer then
                        local newHighlight = Instance.new("Highlight")
                        newHighlight.Name = "ESP_" .. player.Name
                        newHighlight.FillColor = Color3.fromRGB(255, 0, 0)
                        newHighlight.OutlineColor = Color3.fromRGB(255, 255, 255)
                        newHighlight.FillTransparency = 0.7
                        newHighlight.OutlineTransparency = 0
                        newHighlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                        newHighlight.Parent = newChar
                        espHighlights[player] = newHighlight
                    end
                end)
            end
        end
        
        -- Conectar para nuevos jugadores
        local function addESPToNewPlayer(player)
            if player ~= localplayer then
                player.CharacterAdded:Connect(function(char)
                    wait(1)
                    if espEnabled then
                        local highlight = Instance.new("Highlight")
                        highlight.Name = "ESP_" .. player.Name
                        highlight.FillColor = Color3.fromRGB(255, 0, 0)
                        highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
                        highlight.FillTransparency = 0.7
                        highlight.OutlineTransparency = 0
                        highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                        highlight.Parent = char
                        espHighlights[player] = highlight
                    end
                end)
            end
        end
        
        players.PlayerAdded:Connect(addESPToNewPlayer)
        
    else
        -- Remover todos los ESP
        for player, highlight in pairs(espHighlights) do
            if highlight and highlight.Parent then
                highlight:Destroy()
            end
        end
        espHighlights = {}
    end
end

-------------------------------------------------------------------------------------------------------------------------------

-- Crear la GUI con múltiples métodos
local function createGUI()
    local safeParent = findSafeParent()
    if not safeParent then
        warn("No se pudo encontrar un parent seguro para la GUI")
        return nil
    end

    local gui = Instance.new("ScreenGui")
    gui["Name"] = "CheatsMenu_" .. tostring(math.random(10000, 99999))
    gui["ResetOnSpawn"] = false
    gui["IgnoreGuiInset"] = true
    gui["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling
    
    -- Intentar diferentes métodos de parent
    local success, result = pcall(function()
        gui.Parent = safeParent
    end)
    
    if not success then
        -- Método alternativo: usar syn.protect_gui si está disponible
        if syn and syn.protect_gui then
            syn.protect_gui(gui)
            gui.Parent = safeParent
        else
            warn("No se pudo crear la GUI")
            gui:Destroy()
            return nil
        end
    end

    return gui
end

-- Crear la interfaz principal
local gui = createGUI()
if not gui then
    -- Último intento: crear en PlayerGui después de esperar
    wait(2)
    gui = Instance.new("ScreenGui")
    gui.Name = "PlayerCheats"
    gui.ResetOnSpawn = false
    gui.Parent = localplayer:WaitForChild("PlayerGui")
end

local mainFrame = Instance.new("Frame")
mainFrame["Size"] = UDim2.new(0, 200, 0, 150)
mainFrame["Position"] = UDim2.new(0, 10, 0, 10)
mainFrame["BackgroundColor3"] = Color3.fromRGB(30, 30, 30)
mainFrame["BackgroundTransparency"] = 0.1
mainFrame["BorderSizePixel"] = 1
mainFrame["BorderColor3"] = Color3.fromRGB(80, 80, 80)
mainFrame["Parent"] = gui

-- Añadir sombra para mejor visibilidad
local shadow = Instance.new("UIStroke")
shadow.Color = Color3.fromRGB(0, 0, 0)
shadow.Thickness = 2
shadow.Transparency = 0.7
shadow.Parent = mainFrame

-- Hacer la ventana arrastrable
task.spawn(function()
    local dragToggle = nil
    local dragSpeed = 0.25
    local dragStart = nil
    local startPos = nil

    local function updateInput(input)
        local delta = input.Position - dragStart
        local position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
            startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        mainFrame.Position = position
    end

    mainFrame.InputBegan:Connect(function(input)
        if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then 
            dragToggle = true
            dragStart = input.Position
            startPos = mainFrame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragToggle = false
                end
            end)
        end
    end)

    uis.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            if dragToggle then
                updateInput(input)
            end
        end
    end)
end)

-- Barra de título
local titleBar = Instance.new("Frame")
titleBar["Size"] = UDim2.new(1, 0, 0, 25)
titleBar["BackgroundColor3"] = Color3.fromRGB(50, 50, 50)
titleBar["BorderSizePixel"] = 0
titleBar["Parent"] = mainFrame

local titleLabel = Instance.new("TextLabel")
titleLabel["Size"] = UDim2.new(1, -10, 1, 0)
titleLabel["Position"] = UDim2.new(0, 5, 0, 0)
titleLabel["BackgroundTransparency"] = 1
titleLabel["Text"] = "Cheats Menu"
titleLabel["TextColor3"] = Color3.new(1, 1, 1)
titleLabel["TextSize"] = 14
titleLabel["Font"] = Enum.Font.RobotoMono
titleLabel["TextXAlignment"] = Enum.TextXAlignment.Left
titleLabel["Parent"] = titleBar

-- Botón de cerrar
local closeButton = Instance.new("TextButton")
closeButton["Size"] = UDim2.new(0, 20, 0, 20)
closeButton["Position"] = UDim2.new(1, -25, 0, 2)
closeButton["BackgroundColor3"] = Color3.fromRGB(200, 50, 50)
closeButton["Text"] = "X"
closeButton["TextColor3"] = Color3.new(1, 1, 1)
closeButton["TextSize"] = 12
closeButton["Font"] = Enum.Font.RobotoMono
closeButton["BorderSizePixel"] = 0
closeButton["Parent"] = titleBar

closeButton.MouseButton1Click:Connect(function()
    clik()
    gui:Destroy()
end)

-- Función para crear botones
local function createButton(name, position, text)
    local button = Instance.new("TextButton")
    button["Name"] = name
    button["Size"] = UDim2.new(0.9, 0, 0, 30)
    button["Position"] = position
    button["AnchorPoint"] = Vector2.new(0.5, 0)
    button["BackgroundColor3"] = Color3.fromRGB(60, 60, 60)
    button["Text"] = text
    button["TextColor3"] = Color3.new(1, 1, 1)
    button["TextSize"] = 12
    button["Font"] = Enum.Font.RobotoMono
    button["BorderSizePixel"] = 0
    button["Parent"] = mainFrame
    
    local buttonShadow = Instance.new("UIStroke")
    buttonShadow.Color = Color3.fromRGB(0, 0, 0)
    buttonShadow.Thickness = 1
    buttonShadow.Transparency = 0.5
    buttonShadow.Parent = button
    
    return button
end

-- Crear los 3 botones
local infiniteJumpButton = createButton("InfiniteJumpButton", UDim2.new(0.5, 0, 0, 30), "Infinite Jump: OFF")
local noclipButton = createButton("NoclipButton", UDim2.new(0.5, 0, 0, 70), "Noclip: OFF")
local espButton = createButton("ESPButton", UDim2.new(0.5, 0, 0, 110), "ESP: OFF")

-- Conectar los botones a sus funciones
infiniteJumpButton.MouseButton1Click:Connect(function()
    clik()
    toggleInfiniteJump()
    infiniteJumpButton.Text = "Infinite Jump: " .. (infiniteJumpEnabled and "ON" or "OFF")
    infiniteJumpButton.BackgroundColor3 = infiniteJumpEnabled and Color3.fromRGB(50, 200, 50) or Color3.fromRGB(60, 60, 60)
end)

noclipButton.MouseButton1Click:Connect(function()
    clik()
    toggleNoclip()
    noclipButton.Text = "Noclip: " .. (noclipEnabled and "ON" or "OFF")
    noclipButton.BackgroundColor3 = noclipEnabled and Color3.fromRGB(50, 200, 50) or Color3.fromRGB(60, 60, 60)
end)

espButton.MouseButton1Click:Connect(function()
    clik()
    toggleESP()
    espButton.Text = "ESP: " .. (espEnabled and "ON" or "OFF")
    espButton.BackgroundColor3 = espEnabled and Color3.fromRGB(50, 200, 50) or Color3.fromRGB(60, 60, 60)
end)

-------------------------------------------------------------------------------------------------------------------------------

-- Notificación de carga
local function showNotification()
    print("=== Cheats Menu Cargado ===")
    print("• Infinite Jump: Click para activar/desactivar")
    print("• Noclip: Atravesar paredes")
    print("• ESP: Ver jugadores a través de paredes")
    print("============================")
end

showNotification()

-- Limpiar conexiones cuando el script se destruya
gui.Destroying:Connect(function()
    if getgenv().infiniteJumpConnection then
        getgenv().infiniteJumpConnection:Disconnect()
    end
    if getgenv().noclipConnection then
        getgenv().noclipConnection:Disconnect()
    end
    -- Apagar ESP
    if espEnabled then
        espEnabled = false
        for player, highlight in pairs(espHighlights) do
            if highlight and highlight.Parent then
                highlight:Destroy()
            end
        end
        espHighlights = {}
    end
end)
