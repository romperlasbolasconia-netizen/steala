if not game:IsLoaded() then game["Loaded"]:Wait() end

-------------------------------------------------------------------------------------------------------------------------------

local players = game:GetService("Players")
local localplayer = players["LocalPlayer"]
local runservice = game:GetService("RunService")
local uis = game:GetService("UserInputService")

-------------------------------------------------------------------------------------------------------------------------------

local function clik()
	local s = Instance.new("Sound") 
	s["SoundId"] = "rbxassetid://87152549167464"
	s["Parent"] = game["Workspace"]
	s["Volume"] = 1.2
	s["TimePosition"] = 0.1
	s:Play()
end

-------------------------------------------------------------------------------------------------------------------------------

-- Variables para los estados
local infiniteJumpEnabled = false
local noclipEnabled = false
local espEnabled = false
local ragdollEnabled = false

-- Función para Infinite Jump
local function toggleInfiniteJump()
	infiniteJumpEnabled = not infiniteJumpEnabled
	
	if infiniteJumpEnabled then
		local connection
		connection = uis.JumpRequest:Connect(function()
			if localplayer.Character and localplayer.Character:FindFirstChildOfClass("Humanoid") then
				localplayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping")
			end
		end)
		-- Guardar la conexión para poder desconectarla después
		getgenv().infiniteJumpConnection = connection
	else
		if getgenv().infiniteJumpConnection then
			getgenv().infiniteJumpConnection:Disconnect()
			getgenv().infiniteJumpConnection = nil
		end
	end
end

-- Función para Noclip
local function toggleNoclip()
	noclipEnabled = not noclipEnabled
	
	if noclipEnabled then
		local noclipConnection
		noclipConnection = runservice.Stepped:Connect(function()
			if localplayer.Character then
				for _, part in pairs(localplayer.Character:GetDescendants()) do
					if part:IsA("BasePart") and part.CanCollide then
						part.CanCollide = false
					end
				end
			end
		end)
		getgenv().noclipConnection = noclipConnection
	else
		if getgenv().noclipConnection then
			getgenv().noclipConnection:Disconnect()
			getgenv().noclipConnection = nil
		end
		-- Restaurar collision
		if localplayer.Character then
			for _, part in pairs(localplayer.Character:GetDescendants()) do
				if part:IsA("BasePart") then
					part.CanCollide = true
				end
			end
		end
	end
end

-- Función para ESP
local function toggleESP()
	espEnabled = not espEnabled
	
	if espEnabled then
		-- Crear ESP para todos los jugadores
		for _, player in pairs(players:GetPlayers()) do
			if player ~= localplayer and player.Character then
				local highlight = Instance.new("Highlight")
				highlight.Name = "ESP_" .. player.Name
				highlight.FillColor = Color3.fromRGB(255, 0, 0)
				highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
				highlight.FillTransparency = 0.5
				highlight.OutlineTransparency = 0
				highlight.Parent = player.Character
				
				-- Conectar para cuando el personaje cambie
				player.CharacterAdded:Connect(function(newChar)
					wait(1) -- Esperar a que el personaje cargue
					local newHighlight = Instance.new("Highlight")
					newHighlight.Name = "ESP_" .. player.Name
					newHighlight.FillColor = Color3.fromRGB(255, 0, 0)
					newHighlight.OutlineColor = Color3.fromRGB(255, 255, 255)
					newHighlight.FillTransparency = 0.5
					newHighlight.OutlineTransparency = 0
					newHighlight.Parent = newChar
				end)
			end
		end
		
		-- Conectar para nuevos jugadores
		local function addESPToNewPlayer(player)
			if player ~= localplayer then
				player.CharacterAdded:Connect(function(char)
					wait(1)
					if espEnabled then
						local highlight = Instance.new("Highlight")
						highlight.Name = "ESP_" .. player.Name
						highlight.FillColor = Color3.fromRGB(255, 0, 0)
						highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
						highlight.FillTransparency = 0.5
						highlight.OutlineTransparency = 0
						highlight.Parent = char
					end
				end)
			end
		end
		
		players.PlayerAdded:Connect(addESPToNewPlayer)
		
	else
		-- Remover todos los ESP
		for _, player in pairs(players:GetPlayers()) do
			if player ~= localplayer and player.Character then
				local esp = player.Character:FindFirstChild("ESP_" .. player.Name)
				if esp then
					esp:Destroy()
				end
			end
		end
	end
end

-- Función para Ragdoll/Despiece (VERSIÓN MEJORADA - NO MATA)
local function toggleRagdoll()
	if localplayer.Character then
		local character = localplayer.Character
		local humanoid = character:FindFirstChildOfClass("Humanoid")
		
		if humanoid then
			-- Guardar estado original
			local originalWalkSpeed = humanoid.WalkSpeed
			local originalJumpPower = humanoid.JumpPower
			local originalAutoRotate = humanoid.AutoRotate
			
			-- IMPORTANTE: Desactivar la detección de muerte temporalmente
			humanoid.BreakJointsOnDeath = false
			
			-- Desactivar movimientos pero mantener vivo el humanoid
			humanoid.WalkSpeed = 0
			humanoid.JumpPower = 0
			humanoid.AutoRotate = false
			
			-- Esperar un momento
			wait(0.1)
			
			-- En lugar de destruir las uniones, las desconectamos temporalmente
			local savedJoints = {}
			
			for _, obj in pairs(character:GetDescendants()) do
				if obj:IsA("Motor6D") then
					-- Guardar la información de la unión
					table.insert(savedJoints, {
						joint = obj,
						part0 = obj.Part0,
						part1 = obj.Part1,
						transform = obj.Transform
					})
					
					-- Desconectar las partes pero no destruir la unión
					obj.Part0 = nil
					obj.Part1 = nil
					
				elseif obj:IsA("Weld") or obj:IsA("WeldConstraint") then
					-- Para welds simples, solo desactivarlos temporalmente
					obj.Enabled = false
				end
			end
			
			-- Aplicar fuerzas físicas para el efecto de caída
			for _, part in pairs(character:GetDescendants()) do
				if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
					-- Hacer las partes físicas
					part.Massless = false
					part.CanCollide = true
					
					-- Añadir fuerza hacia abajo suave
					local bodyVelocity = Instance.new("BodyVelocity")
					bodyVelocity.Velocity = Vector3.new(0, -30, 0) -- Menos fuerza para no atravesar todo
					bodyVelocity.MaxForce = Vector3.new(0, 50000, 0)
					bodyVelocity.Parent = part
					
					-- Añadir pequeña fuerza aleatoria para separación
					local randomForce = Instance.new("BodyForce")
					randomForce.Force = Vector3.new(
						math.random(-500, 500),
						math.random(200, 800), 
						math.random(-500, 500)
					)
					randomForce.Parent = part
					
					-- Destruir las fuerzas después de un tiempo
					game:GetService("Debris"):AddItem(bodyVelocity, 2)
					game:GetService("Debris"):AddItem(randomForce, 1.5)
				end
			end
			
			-- Esperar un tiempo para el efecto ragdoll
			wait(3)
			
			-- Reconstruir el personaje
			if humanoid and humanoid.Parent and humanoid.Health > 0 then
				-- Reactivar las uniones
				for _, savedJoint in pairs(savedJoints) do
					if savedJoint.joint and savedJoint.joint.Parent then
						savedJoint.joint.Part0 = savedJoint.part0
						savedJoint.joint.Part1 = savedJoint.part1
					end
				end
				
				-- Reactivar welds
				for _, obj in pairs(character:GetDescendants()) do
					if obj:IsA("Weld") or obj:IsA("WeldConstraint") then
						obj.Enabled = true
					end
				end
				
				-- Restaurar propiedades del humanoid
				humanoid.WalkSpeed = originalWalkSpeed
				humanoid.JumpPower = originalJumpPower
				humanoid.AutoRotate = originalAutoRotate
				humanoid.BreakJointsOnDeath = true
				
				-- Forzar reposicionamiento de partes
				local rootPart = character:FindFirstChild("HumanoidRootPart")
				if rootPart then
					-- Juntar todas las partes cerca del root
					for _, part in pairs(character:GetDescendants()) do
						if part:IsA("BasePart") and part ~= rootPart then
							part.CFrame = rootPart.CFrame
							part.Velocity = Vector3.new(0, 0, 0)
							part.RotVelocity = Vector3.new(0, 0, 0)
						end
					end
				end
			else
				-- Si el personaje murió, restaurar la configuración por defecto
				humanoid.BreakJointsOnDeath = true
			end
		end
	end
end

-------------------------------------------------------------------------------------------------------------------------------

-- Crear la GUI
local gui = Instance.new("ScreenGui")
gui["Name"] = "CheatsGUI"
if game["Run Service"]:IsStudio() then 
	gui["Parent"] = localplayer:WaitForChild("PlayerGui") 
else 
	gui["Parent"] = gethui and gethui() or game:GetService("CoreGui") 
end
gui["ResetOnSpawn"] = false

-- Ajustar el tamaño para 4 botones
local mainFrame = Instance.new("Frame")
mainFrame["Size"] = UDim2.new(0, 200, 0, 180)
mainFrame["Position"] = UDim2.new(0, 10, 0, 10)
mainFrame["BackgroundColor3"] = Color3.fromRGB(30, 30, 30)
mainFrame["BorderSizePixel"] = 0
mainFrame["Parent"] = gui

-- Hacer la ventana arrastrable
task.spawn(function()
	local dragToggle = nil
	local dragSpeed = 0.25
	local dragStart = nil
	local startPos = nil

	local function updateInput(input)
		local delta = input.Position - dragStart
		local position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
			startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		game:GetService("TweenService"):Create(mainFrame, TweenInfo.new(dragSpeed), {Position = position}):Play()
	end

	mainFrame.InputBegan:Connect(function(input)
		if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then 
			dragToggle = true
			dragStart = input.Position
			startPos = mainFrame.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragToggle = false
				end
			end)
		end
	end)

	uis.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			if dragToggle then
				updateInput(input)
			end
		end
	end)
end)

-- Barra de título
local titleBar = Instance.new("Frame")
titleBar["Size"] = UDim2.new(1, 0, 0, 25)
titleBar["BackgroundColor3"] = Color3.fromRGB(50, 50, 50)
titleBar["BorderSizePixel"] = 0
titleBar["Parent"] = mainFrame

local titleLabel = Instance.new("TextLabel")
titleLabel["Size"] = UDim2.new(1, 0, 1, 0)
titleLabel["BackgroundTransparency"] = 1
titleLabel["Text"] = "Cheats Menu"
titleLabel["TextColor3"] = Color3.new(1, 1, 1)
titleLabel["TextSize"] = 14
titleLabel["Font"] = Enum.Font.RobotoMono
titleLabel["Parent"] = titleBar

-- Función para crear botones
local function createButton(name, position, text)
	local button = Instance.new("TextButton")
	button["Name"] = name
	button["Size"] = UDim2.new(0.8, 0, 0, 30)
	button["Position"] = position
	button["AnchorPoint"] = Vector2.new(0.5, 0)
	button["BackgroundColor3"] = Color3.fromRGB(60, 60, 60)
	button["Text"] = text
	button["TextColor3"] = Color3.new(1, 1, 1)
	button["TextSize"] = 14
	button["Font"] = Enum.Font.RobotoMono
	button["BorderSizePixel"] = 0
	button["Parent"] = mainFrame
	
	return button
end

-- Crear los 4 botones
local infiniteJumpButton = createButton("InfiniteJumpButton", UDim2.new(0.5, 0, 0, 30), "Infinite Jump: OFF")
local noclipButton = createButton("NoclipButton", UDim2.new(0.5, 0, 0, 65), "Noclip: OFF")
local espButton = createButton("ESPButton", UDim2.new(0.5, 0, 0, 100), "ESP: OFF")
local ragdollButton = createButton("RagdollButton", UDim2.new(0.5, 0, 0, 135), "Ragdoll (Safe)")

-- Conectar los botones a sus funciones
infiniteJumpButton.MouseButton1Click:Connect(function()
	clik()
	toggleInfiniteJump()
	infiniteJumpButton.Text = "Infinite Jump: " .. (infiniteJumpEnabled and "ON" or "OFF")
end)

noclipButton.MouseButton1Click:Connect(function()
	clik()
	toggleNoclip()
	noclipButton.Text = "Noclip: " .. (noclipEnabled and "ON" or "OFF")
end)

espButton.MouseButton1Click:Connect(function()
	clik()
	toggleESP()
	espButton.Text = "ESP: " .. (espEnabled and "ON" or "OFF")
end)

ragdollButton.MouseButton1Click:Connect(function()
	clik()
	toggleRagdoll()
end)

-------------------------------------------------------------------------------------------------------------------------------

-- Limpiar conexiones cuando el script se destruya
gui.Destroying:Connect(function()
	if getgenv().infiniteJumpConnection then
		getgenv().infiniteJumpConnection:Disconnect()
	end
	if getgenv().noclipConnection then
		getgenv().noclipConnection:Disconnect()
	end
	toggleESP() -- Esto apagará el ESP
end)

print("Cheats GUI loaded! Use the buttons to toggle features.")
